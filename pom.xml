<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.17</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.ziumks</groupId>
    <artifactId>csvReader</artifactId>
    <version>0.0.1</version>
    <name>csvReader</name>
    <description>csvReader</description>
    <properties>
        <java.version>8</java.version>
    </properties>
    <dependencies>
<!--        &lt;!&ndash; spring-boot-starter-web &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-web</artifactId>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; spring-boot-starter-actuator &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-actuator</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>de.codecentric</groupId>-->
<!--            <artifactId>spring-boot-admin-starter-client</artifactId>-->
<!--            <version>2.7.4</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; web front template thymeleaf 사용하기 위한 dependency  &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-thymeleaf</artifactId>-->
<!--        </dependency>-->
        <!-- Spring Boot Starter Test: JUnit을 사용한 Spring Boot 애플리케이션 테스트를 위한 스타터. -->
        <!-- Spring Boot Starter Test: Starter for testing Spring Boot applications with JUnit. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- static 메소드 테스팅 라이브러리 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>3.11.2</version>
            <scope>test</scope>
        </dependency>
        <!-- spring-boot-configuration-processor: Spring Boot Configuration Annotation Processor -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Spring Boot DevTools: 더 빠른 애플리케이션 개발을 위한 개발 시간 기능 제공. -->
        <!-- Spring Boot DevTools: Provides development-time features for faster application development. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <!-- Spring Data JDBC Starter: JDBC를 Spring Data 애플리케이션에서 사용하기 위한 지원 제공. -->
        <!-- Spring Data JDBC Starter: Provides support for using JDBC in Spring Data applications. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <!-- Redis Sub use dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- Spring Data JPA Starter: Spring Data 애플리케이션에서 JPA(Java Persistence API)를 사용하기 위한 지원 제공. -->
        <!-- Spring Data JPA Starter: Provides support for using JPA (Java Persistence API) in Spring Data applications. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- 하이버네이트 종속성 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.6.15.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>5.6.15.Final</version>
        </dependency>
        <!-- Hibernate Ehcache: Hibernate에서 Ehcache를 2차 캐시로 사용할 수 있도록 지원 추가. -->
        <!-- Hibernate Ehcache: Adds support for using Ehcache as a second-level cache in Hibernate. -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
        </dependency>
        <!-- Hibernate JPA API: JPA(Java Persistence API) 2.1 명세 API를 제공. -->
        <!-- Hibernate JPA API: Provides the JPA (Java Persistence API) 2.1 specification APIs. -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>
        <!-- 동적 쿼리를 사용하기 위한 querydsl -jpa -->
        <!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa -->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>5.0.0</version>
        </dependency>
        <!-- 동적 쿼리를 사용하기 위한 querydsl -apt -->
        <!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-apt -->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>5.0.0</version>
        </dependency>
        <!-- Project Lombok: 보일러플레이트 코드에 대한 어노테이션을 제공하여 Java 코드를 간소화하는 라이브러리. -->
        <!-- Project Lombok: A library that simplifies Java code by providing annotations for boilerplate code. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- springdoc-openapi-ui -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.7.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <!--    util HttpConnection 사용하기 위한 httpclient 라이브러리 web server에는 자동 포함 이지만.     -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <!--    util HttpConnection 사용하기 위한 guava     -->
        <!--    2024_0110 zium_kim swagger-fox와 기존 guava 버전 충돌 12 -> 24으로 변경    -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>


        <!-- Gson: JSON 직렬화 및 역직렬화를 위한 자바 라이브러리. -->
        <!-- Gson: A Java library for JSON serialization and deserialization. -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- PostgreSQL JDBC Driver: PostgreSQL 데이터베이스에 연결하기 위한 JDBC 드라이버. -->
        <!-- PostgreSQL JDBC Driver: JDBC driver for connecting to PostgreSQL databases. -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
<!--        &lt;!&ndash; MySQL Connector/J: MySQL 데이터베이스에 연결하기 위한 JDBC 드라이버. &ndash;&gt;-->
<!--        &lt;!&ndash; MySQL Connector/J: MySQL JDBC driver for connecting to MySQL databases. &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.mysql</groupId>-->
<!--            <artifactId>mysql-connector-j</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->

        <!--        &lt;!&ndash; H2 Database: 개발 및 테스트에 자주 사용되는 인메모리 데이터베이스. &ndash;&gt;-->
<!--        &lt;!&ndash; H2 Database: An in-memory database often used for development and testing. &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.h2database</groupId>-->
<!--            <artifactId>h2</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; Oracle JDBC Driver (ojdbc11): Oracle 데이터베이스에 연결하기 위한 JDBC 드라이버. &ndash;&gt;-->
<!--        &lt;!&ndash; Oracle JDBC Driver (ojdbc11): JDBC driver for connecting to Oracle databases. &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.oracle.database.jdbc</groupId>-->
<!--            <artifactId>ojdbc11</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; MariaDB Java Client: MariaDB 데이터베이스에 연결하기 위한 JDBC 드라이버. &ndash;&gt;-->
<!--        &lt;!&ndash; MariaDB Java Client: JDBC driver for connecting to MariaDB databases. &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.mariadb.jdbc</groupId>-->
<!--            <artifactId>mariadb-java-client</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- 이 플러그인 통해 Q+Entity 자바 클래스를 자동으로 생성해 줍니다. -->
            <!-- Maven을 클릭하고 lifecycle 아래에 complie 실행 -->
            <!-- QEntity 생성 확인 - target/class/com/ziumks/pp/model/entity 밑에 Q Entity들 확인 -->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            <options>
                                <querydsl.generatedAnnotationClass>javax.annotation.Generated</querydsl.generatedAnnotationClass>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
